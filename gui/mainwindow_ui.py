# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '.\mainwindow.ui'
#
# Created by: PyQt5 UI code generator 5.9.2
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.setEnabled(True)
        MainWindow.resize(1046, 770)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(MainWindow.sizePolicy().hasHeightForWidth())
        MainWindow.setSizePolicy(sizePolicy)
        MainWindow.setBaseSize(QtCore.QSize(1400, 400))
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("logo.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)
        MainWindow.setStyleSheet("")
        MainWindow.setDocumentMode(False)
        self.mainwidget = QtWidgets.QWidget(MainWindow)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.mainwidget.sizePolicy().hasHeightForWidth())
        self.mainwidget.setSizePolicy(sizePolicy)
        self.mainwidget.setStyleSheet("")
        self.mainwidget.setObjectName("mainwidget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.mainwidget)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.s_all = QtWidgets.QSplitter(self.mainwidget)
        self.s_all.setOrientation(QtCore.Qt.Vertical)
        self.s_all.setObjectName("s_all")
        self.scode = QtWidgets.QSplitter(self.s_all)
        self.scode.setOrientation(QtCore.Qt.Horizontal)
        self.scode.setObjectName("scode")
        self.pt_pas = CodeEditor(self.scode)
        self.pt_pas.setObjectName("pt_pas")
        self.pt_c = CodeEditor(self.scode)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pt_c.sizePolicy().hasHeightForWidth())
        self.pt_c.setSizePolicy(sizePolicy)
        self.pt_c.setObjectName("pt_c")
        self.pt_console = Console(self.s_all)
        self.pt_console.setObjectName("pt_console")
        self.horizontalLayout.addWidget(self.s_all)
        MainWindow.setCentralWidget(self.mainwidget)
        self.toolbarDefault = QtWidgets.QToolBar(MainWindow)
        self.toolbarDefault.setStyleSheet("color: rgb(235, 235, 235);\n"
"font: 75 12pt \"Arial\";")
        self.toolbarDefault.setObjectName("toolbarDefault")
        MainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.toolbarDefault)
        self.actionNew = QtWidgets.QAction(MainWindow)
        self.actionNew.setEnabled(True)
        icon = QtGui.QIcon.fromTheme("document-new")
        self.actionNew.setIcon(icon)
        self.actionNew.setObjectName("actionNew")
        self.actionOpen = QtWidgets.QAction(MainWindow)
        icon = QtGui.QIcon.fromTheme("document-open")
        self.actionOpen.setIcon(icon)
        self.actionOpen.setObjectName("actionOpen")
        self.actionSave = QtWidgets.QAction(MainWindow)
        self.actionSave.setEnabled(True)
        icon = QtGui.QIcon.fromTheme("document-save")
        self.actionSave.setIcon(icon)
        self.actionSave.setObjectName("actionSave")
        self.actionQuit = QtWidgets.QAction(MainWindow)
        icon = QtGui.QIcon.fromTheme("application-exit")
        self.actionQuit.setIcon(icon)
        self.actionQuit.setObjectName("actionQuit")
        self.actionStop = QtWidgets.QAction(MainWindow)
        self.actionStop.setEnabled(False)
        icon = QtGui.QIcon.fromTheme("process-stop")
        self.actionStop.setIcon(icon)
        self.actionStop.setObjectName("actionStop")
        self.actionAbout = QtWidgets.QAction(MainWindow)
        icon = QtGui.QIcon.fromTheme("help-about")
        self.actionAbout.setIcon(icon)
        self.actionAbout.setObjectName("actionAbout")
        self.actionCompile = QtWidgets.QAction(MainWindow)
        self.actionCompile.setObjectName("actionCompile")
        self.actionRun = QtWidgets.QAction(MainWindow)
        self.actionRun.setObjectName("actionRun")
        self.toolbarDefault.addAction(self.actionNew)
        self.toolbarDefault.addAction(self.actionOpen)
        self.toolbarDefault.addAction(self.actionSave)
        self.toolbarDefault.addSeparator()
        self.toolbarDefault.addAction(self.actionCompile)
        self.toolbarDefault.addAction(self.actionRun)

        self.retranslateUi(MainWindow)
        self.actionQuit.triggered.connect(MainWindow.close)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "P2C Editor"))
        self.toolbarDefault.setWindowTitle(_translate("MainWindow", "Default bar"))
        self.actionNew.setText(_translate("MainWindow", "&New"))
        self.actionNew.setToolTip(_translate("MainWindow", "Create a new program"))
        self.actionNew.setStatusTip(_translate("MainWindow", "Start a new program"))
        self.actionNew.setShortcut(_translate("MainWindow", "Ctrl+N"))
        self.actionOpen.setText(_translate("MainWindow", "&Open"))
        self.actionOpen.setToolTip(_translate("MainWindow", "Open a saved program"))
        self.actionOpen.setStatusTip(_translate("MainWindow", "Choose a new program to view"))
        self.actionOpen.setShortcut(_translate("MainWindow", "Ctrl+O"))
        self.actionSave.setText(_translate("MainWindow", "&Save"))
        self.actionSave.setToolTip(_translate("MainWindow", "Save current program"))
        self.actionSave.setStatusTip(_translate("MainWindow", "Save current program on disk"))
        self.actionSave.setShortcut(_translate("MainWindow", "Ctrl+S"))
        self.actionQuit.setText(_translate("MainWindow", "&Quit"))
        self.actionQuit.setStatusTip(_translate("MainWindow", "Exit from Austro Simulator"))
        self.actionQuit.setShortcut(_translate("MainWindow", "Ctrl+Q"))
        self.actionStop.setText(_translate("MainWindow", "&Stop"))
        self.actionStop.setToolTip(_translate("MainWindow", "Stop the computer execution"))
        self.actionStop.setStatusTip(_translate("MainWindow", "Stop program execution"))
        self.actionStop.setShortcut(_translate("MainWindow", "F10"))
        self.actionAbout.setText(_translate("MainWindow", "&About"))
        self.actionAbout.setStatusTip(_translate("MainWindow", "About Austro Simulator"))
        self.actionCompile.setText(_translate("MainWindow", "Compile"))
        self.actionCompile.setToolTip(_translate("MainWindow", "Compile Pascal-S"))
        self.actionCompile.setShortcut(_translate("MainWindow", "F5"))
        self.actionRun.setText(_translate("MainWindow", "Run"))
        self.actionRun.setToolTip(_translate("MainWindow", "Run C"))
        self.actionRun.setShortcut(_translate("MainWindow", "F6"))

from codeeditor import CodeEditor
from p2ceditor import Console
